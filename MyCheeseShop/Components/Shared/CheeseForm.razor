@using MyCheeseShop.Context
@using MyCheeseShop.Model
@using System.ComponentModel.DataAnnotations
@inject FileUploader FileUploader
@inject CheeseProvider CheeseProvider
@inject NavigationManager NavigationManager

<EditForm Model="@Model" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="row">
            <div class="col-12 mt-1">
                <div class="card" style="border: 1px solid #e3e1b8">
                    <div class="card-body" style="background-color:#e3e1b8">
                        <h4 class="card-title">Details</h4>
                        <div class="form-group mb-2">
                            <label for="name">Name</label>
                            <InputText id="name" class="form-control" @bind-Value="@Model.Name" placeholder="Name" />
                            <div class="small">
                                <ValidationMessage For="@(() => Model.Name)" />
                            </div>
                        </div>
                        <div class="form-group mb-2">
                            <label for="type">Type</label>
                            <InputText id="type" class="form-control" @bind-Value="@Model.Type" placeholder="Type" />
                            <div class="small">
                                <ValidationMessage For="@(() => Model.Type)" />
                            </div>
                        </div>
                        <div class="form-group mb-2">
                            <label for="description">Description</label>
                            <InputTextArea id="description" class="form-control" @bind-Value="@Model.Description" rows="5" placeholder="Description" />
                            <div class="small">
                                <ValidationMessage For="@(() => Model.Description)" />
                            </div>
                        </div>
                        <div class="form-group mb-2">
                            <label for="strength">Strength</label>
                            <InputText id="strength" class="form-control" @bind-Value="@Model.Strength" placeholder="Strength" />
                            <div class="small">
                                <ValidationMessage For="@(() => Model.Strength)" />
                            </div>
                        </div>
                        <div class="form-group mb-2">
                            <label for="price">Price</label>
                            <div class="input-group">
                                <span class="input-group-text">£</span>
                                <InputNumber id="price" class="form-control" @bind-Value="@Model.Price" placeholder="9.99" min="0.01" max="10000.00" step="0.01" />
                                <div class="small">
                                    <ValidationMessage For="@(() => Model.Price)" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="row mt-3">
            <div class="col-12">
                <div class="card" style="border: 1px solid #e3e1b8">
                    <div class="card-body" style="background-color:#e3e1b8">
                        <h4 class="card-title">Image</h4>
                        <div class="form-group mb-2">
                            <InputFile id="imageUrl" class="form-control" @bind-Value="@Model.ImageUrl" OnChange="LoadFile" />
                            <div class="small">
                                <ValidationMessage For="@(() => Model.ImageUrl)" />
                            </div>
                        </div>
                        <div class="mb-2 text-center">
                            <img src="/img/cheeses/@Model.ImageUrl" class="img-thumbnail" alt="@Model.Name" onerror="this.onerror = null; this.src='/img/no_cheese.png'" style="background-color:#e3e1b8">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-12">
                <div class="d-flex justify-content-center">
                    <button type="submit" class="btn btn-warning w-50"> @(Cheese is null ? "Add cheese" : "Update cheese")</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public Cheese? Cheese { get; set; }
    private CheeseModel Model { get; set; }

    protected override void OnParametersSet()
    {
        Model = Cheese is null ? new CheeseModel() : new CheeseModel(Cheese);
        base.OnParametersSet();
    }

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        var filename = await FileUploader.UploadFileAsync(e.File);
        if (filename is null)
        {
            Model.ImageUrl = null;
            return;
        }
        Model.ImageUrl = filename;
    }

    private async Task HandleSubmit()
    {
        var cheese = Cheese ?? new Cheese();

        cheese.Description = Model.Description;
        cheese.Name = Model.Name;
        cheese.Price = Model.Price;
        cheese.Strength = Model.Strength;
        cheese.Type = Model.Type;
        cheese.ImageUrl = Model.ImageUrl;

        if (cheese.Id == 0)
        {
            await CheeseProvider.AddCheeseAsync(cheese);
            Model = new CheeseModel();
        }
        else
        {
            await CheeseProvider.UpdateCheeseAsync(cheese);
        }
        NavigationManager.NavigateTo("/");
    }

    private sealed class CheeseModel
    {
        [Required(ErrorMessage = "Please enter the name of the cheese.")]
        public string Name { get; set; } = "";

        [Required(ErrorMessage = "Please enter the type of the cheese.")]
        public string Type { get; set; } = "";

        [Required(ErrorMessage = "Please enter the description of the cheese.")]
        public string Description { get; set; } = "";

        [Required(ErrorMessage = "Please enter the strength of the cheese.")]
        public string Strength { get; set; } = "";

        [Required(ErrorMessage = "Please enter the price of the cheese.")]
        public decimal Price { get; set; }

        [Required(ErrorMessage = "Images must be .jpg, .png or .gif and less than 5MB")]
        public string? ImageUrl { get; set; } = "";

        public CheeseModel()
        {
        }

        public CheeseModel(Cheese cheese)
        {
            Name = cheese.Name;
            Type = cheese.Type;
            Description = cheese.Description;
            Strength = cheese.Strength;
            Price = cheese.Price;
            ImageUrl = cheese.ImageUrl;
        }
    }
}
